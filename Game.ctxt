#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\n\ Create\ all\ the\ rooms,\ their\ characters,\ items,\ and\ link\ their\ exits\ together.\n
comment10.params=
comment10.target=void\ printMedicineWarning()
comment11.params=
comment11.target=void\ printInvalidObject()
comment12.params=
comment12.target=void\ drink()
comment13.params=item
comment13.target=void\ pickUp(Items)
comment13.text=\n\ pickUp(Items\ item)\:\n\ attempts\ to\ pick\ up\ an\ item\ and\ add\ it\ to\ the\ user's\ inventory.\n\ if\ it\ is\ to\ heavy,\ the\ system\ prints\ a\ line\ telling\ the\ user\ the\ object\ cannot\n\ be\ picked\ up\n
comment14.params=character
comment14.target=void\ talk(Character)
comment15.params=
comment15.target=void\ use()
comment16.params=item
comment16.target=void\ drop(Items)
comment16.text=\n\ drop(Items\ item)\n\ drops\ an\ item\ from\ the\ user's\ inventory,\ using\ a\ class\ inherited\ form\ the\ User\ Class.\n\ this\ eliminates\ the\ item\ from\ the\ ArrayList<Items>\ inventory\ and\ removes\ that\ weight\ from\ \n\ the\ amount\ the\ user\ is\ currently\ carrying,\ and\ updates\ the\ inventory\ String\ to\n\ reflect\ what\ the\ user\ is\ carrying\n
comment17.params=
comment17.target=void\ eat()
comment18.params=
comment18.target=void\ printHelp()
comment18.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment19.params=
comment19.target=boolean\ checkLockedDoor()
comment2.params=
comment2.target=void\ play()
comment2.text=\n\ \ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\n
comment20.params=command\ nextRoom
comment20.target=boolean\ checkNextRoom(Command,\ Room)
comment21.params=command
comment21.target=void\ goRoom(Command)
comment21.text=\ \n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n
comment22.params=
comment22.target=void\ printStats()
comment23.params=
comment23.target=void\ updateHealth()
comment24.params=condition
comment24.target=void\ endGame(java.lang.String)
comment25.params=command
comment25.target=boolean\ quit(Command)
comment25.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment4.params=command
comment4.target=boolean\ processCommand(Command)
comment4.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment5.params=
comment5.target=void\ printMap()
comment5.text=\n\ prints\ the\ ASCII\ code\ map\n
comment6.params=
comment6.target=void\ printClue()
comment7.params=command
comment7.target=void\ proceed(Command)
comment8.params=
comment8.target=void\ printCharacterWarning()
comment9.params=
comment9.target=void\ printUnknownCommand()
numComments=26
