#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map\ and\ configurations.\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\n\ Create\ all\ the\ rooms,\ their\ characters,\ items,\ and\ link\ their\ exits\ together.\n
comment10.params=
comment10.target=void\ printInventory()
comment10.text=\n\ Here\ we\ print\ out\ the\ items\ in\ the\ inventory\ and\ their\ weight\n
comment11.params=
comment11.target=void\ printStatus()
comment11.text=\n\ Here\ we\ print\ out\ all\ the\ info\ when\ a\ user\ enters\ a\ new\ room\n
comment12.params=
comment12.target=void\ printHelp()
comment12.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment13.params=command
comment13.target=void\ talk(Command)
comment13.text=\n\ Given\ a\ command,\ determine\ the\ character\ that\ is\ being\ talked\ to,\ if\ that\ character\ is\ in\ the\ room,\ and\ print\ out\ their\ dialogue.\n\ @param\ Command\ command\ the\ commannd\ from\ which\ the\ character\ is\ determined.\ \ \ \ \ \n
comment14.params=command
comment14.target=void\ eat(Command)
comment14.text=\n\ Given\ a\ command,\ determine\ the\ item,\ and\ whether\ it\ exists\ and\ is\ food,\ then\ add\ the\ poisoned\ food\ to\ the\ inventory\n\ @param\ Command\ command\ the\ commannd\ from\ which\ the\ food\ is\ determined.\ \ \ \ \ \n
comment15.params=command
comment15.target=void\ drink(Command)
comment15.text=\n\ Given\ a\ command,\ determine\ the\ item,\ and\ whether\ it\ exists\ and\ is\ medicine,\ then\ cure\ the\ sickeness.\ If\ the\ user\ isn't\ sick\ don't\ let\ them\ drink\ the\ medicine.\n\ @param\ Command\ command\ the\ commannd\ from\ which\ the\ medicine\ is\ determined.\ \ \ \ \ \n
comment16.params=command
comment16.target=void\ add(Command)
comment16.text=\n\ Given\ a\ command,\ determine\ the\ item,\ and\ whether\ it\ exists,\ then\ check\ that\ the\ inventory\ is\ not\ full\ and\ exists,\ then\ add\ the\ item\ to\ inventory,\n\ so\ long\ as\ it\ doesn't\ exceed\ the\ capacity\n\ @param\ Command\ command\ the\ commannd\ from\ which\ the\ item\ is\ determined.\ \ \ \ \ \n
comment17.params=command
comment17.target=void\ drop(Command)
comment17.text=\n\ Given\ a\ command,\ determine\ the\ item,\ and\ whether\ it\ exists,\ then\ remove\ the\ item\ and\ its\ weight\ from\ the\ inventory\n\ @param\ Command\ command\ the\ command\ from\ which\ the\ item\ is\ determined.\ \ \ \ \ \n
comment18.params=command
comment18.target=void\ use(Command)
comment18.text=\n\ Given\ a\ command,\ determine\ that\ item\ exists\ and\ is\ a\ key.\ If\ the\ user\ is\ in\ the\ entrance\ hall\ unlock\ the\ door,\ if\ not\ tell\ the\ user\ to\ go\ to\ the\ entrance\ hall\n\ @param\ command\ the\ commannd\ from\ which\ the\ key\ item\ is\ determined.\ \ \ \ \ \n
comment19.params=
comment19.target=boolean\ isInventoryFull()
comment19.text=\n\ check\ that\ the\ inventory\ weight\ does\ not\ exceed\ capacity.\ \ \ \ \n\ @return\ true\ if\ inventory\ is\ full\n
comment2.params=
comment2.target=void\ play()
comment2.text=\n\ \ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\n
comment20.params=
comment20.target=int\ getInventoryWeight()
comment20.text=\n\ get\ the\ weight\ of\ all\ the\ items\ in\ the\ inventory\ \ \n\ @return\ int\ weight\ that\ is\ the\ sum\ of\ all\ the\ item\ weights.\n
comment21.params=
comment21.target=boolean\ checkLockedDoor()
comment21.text=\n\ Check\ that\ the\ door\ is\ not\ locked,\ and\ prompt\ user\ given\ room\n\ @return\ true\ if\ door\ is\ locked\ \n
comment22.params=
comment22.target=boolean\ passcodePrompt()
comment22.text=\n\ Prompt\ user\ to\ try\ and\ unlock\ door\n\ @return\ true\ if\ user\ successfully\ unlocks\ door\n
comment23.params=
comment23.target=boolean\ openEntrance()
comment23.text=\n\ Prompt\ user\ to\ try\ and\ unlock\ door\n\ @return\ true\ if\ user\ successfully\ unlocks\ door\n
comment24.params=nextRoom
comment24.target=boolean\ checkNextRoom(Room)
comment24.text=\n\ Checks\ if\ the\ door\ exists\ \n\ @param\ Room\ nextRoom,\ the\ next\ room\ that\ user\ wants\ to\ go\ to.\n\ @return\ true\ if\ door\ exists\n
comment25.params=command
comment25.target=void\ goRoom(Command)
comment25.text=\ \n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ unlocked\ exit,\ enter\ the\ new\n\ room\ and\ print\ information,\ otherwise\ print\ an\ error\ message.\n\ @param\ Command\ command,\ the\ command\ from\ which\ a\ direction\ is\ determined\n
comment26.params=
comment26.target=void\ updateHealth()
comment26.text=\ \n\ Randomly\ make\ user\ sick\ and\ update\ them\ on\ how\ much\ time\ they\ have\ left\ to\ live\n
comment27.params=
comment27.target=void\ makeSick()
comment27.text=\ \n\ Makes\ the\ user\ sick\ and\ gives\ them\ 3\ moves\ to\ find\ the\ cure\n
comment28.params=
comment28.target=void\ makeWell()
comment28.text=\ \n\ Makes\ the\ user\ well\ and\ gives\ them\ time\ to\ survive\n
comment29.params=currentRoom\ newRoom\ character
comment29.target=void\ transportCharacter(Room,\ Room,\ Character)
comment29.text=\n\ Transports\ the\ character\ to\ a\ different\ room\ following\ a\ conversation\n\ @param\ Room\ currentRoom,\ the\ character's\ current\ room\ \n\ @param\ Room\ newRoom,\ the\ character's\ new\ room\ \n\ @param\ Character\ character,\ the\ character\ being\ transported\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment30.params=condition
comment30.target=void\ endGame(java.lang.String)
comment30.text=\ \n\ Ends\ the\ game\ based\ on\ user\ actions\n\ @param\ String\ condition,\ which\ determines\ wether\ user\ wins\ or\ loses\n
comment31.params=command
comment31.target=boolean\ quit(Command)
comment31.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
comment4.params=command
comment4.target=boolean\ processCommand(Command)
comment4.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ Command\ command\ the\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment5.params=itemWord
comment5.target=Item\ getItemFromString(java.lang.String)
comment5.text=\n\ Given\ an\ String,\ determinee\ if\ that\ string\ is\ an\ available\ item\ for\ the\ user.\n\ @param\ String\ itemWord\ the\ string\ to\ be\ processed.\n\ @return\ Item\ if\ the\ string\ represents\ an\ item\ in\ the\ inventory\ or\ room,\ otherwise\ return\ null\n
comment6.params=item
comment6.target=boolean\ itemInInventory(Item)
comment6.text=\n\ Given\ an\ item,\ determine\ if\ it\ is\ in\ the\ inventory\n\ @param\ Item\ item\ the\ item\ to\ be\ checked\ for\ in\ the\ inventory\ \ \n\ @return\ true\ if\ item\ is\ in\ inventory\ and\ inventory\ exists\n
comment7.params=command
comment7.target=boolean\ checkObjectCommand(Command)
comment7.text=\n\ Given\ a\ command\ check\ that\ the\ item\ had\ permission\ to\ use\ command\n\ @param\ Command\ command\ the\ command\ to\ be\ process\n\ @return\ true\ if\ the\ item\ can\ use\ that\ command\n
comment8.params=characterWord
comment8.target=Character\ getCharacterFromString(java.lang.String)
comment8.text=\n\ Given\ an\ String,\ determine\ if\ that\ string\ is\ a\ charachter\n\ @param\ String\ characterWord\ the\ string\ to\ be\ processed.\n\ @return\ Character\ if\ the\ string\ represents\ a\ charachter\ in\ the\ room,\ otherwise\ return\ null\n
comment9.params=command
comment9.target=void\ printInfo(Command)
comment9.text=\n\ Given\ a\ command,\ process\ whether\ the\ user\ wants\ to\ read\ a\ map\ or\ clue\ and\ then\ print\ out\ the\ information\ for\ that\ object\n\ @param\ Command\ command\ the\ command\ from\ which\ the\ object\ is\ determined.\ \ \ \ \ \n
numComments=32
